{"version":3,"sources":["images/github.svg","images/linkedin.svg","images/email.svg","images/resume.svg","components/shell/Header.js","components/shell/Footer.js","components/common/Tag.js","page-components/About/index.js","components/common/ProjectItem.js","page-components/Projects/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","colorClick","event","props","updateGlobalColor","target","id","className","map","color","onClick","to","pathname","src","GithubLogo","alt","LinkedInLogo","Email","Resume","Component","Footer","Tag","name","this","About","ProjectItem","image","tags","content","tag","Projects","liveSiteUrl","caseStudyUrl","project","key","App","state","setState","mainClassName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,oZCStBC,E,4MASnBC,WAAa,SAAEC,GACb,EAAKC,MAAMC,kBAAmBF,EAAMG,OAAOC,K,uDAGnC,IAAD,OAQP,OACE,gCACE,yBAAKC,UAAU,gBATJ,CACb,OACA,SACA,QACA,UAMaC,KAAK,SAAAC,GACV,OAAO,yBACLH,GAAKG,EACLF,UAAY,SAAWE,EACvBC,QAAU,EAAKT,iBAMvB,yBAAKM,UAAU,cACb,oEACA,6BACE,kBAAC,IAAD,CAAMI,GAAI,CAAEC,SAAU,8BAAgCP,OAAO,UAC3D,yBAAKQ,IAAMC,IAAaC,IAAI,YAE9B,kBAAC,IAAD,CAAMJ,GAAI,CAAEC,SAAU,wCAA0CP,OAAO,UACrE,yBAAKQ,IAAMG,IAAeD,IAAI,cAEhC,kBAAC,IAAD,CAAMJ,GAAI,CAAEC,SAAU,8BACpB,yBAAKC,IAAMI,IAAQF,IAAI,WAEzB,kBAAC,IAAD,CAAMJ,GAAG,4BAA4BN,OAAO,UAC1C,yBAAKQ,IAAMK,IAASH,IAAI,mB,GA/CFI,aCNfC,G,6KAEjB,OACE,qC,GAH8BD,cCCfE,G,mLAKT,IACAC,EAASC,KAAKpB,MAAdmB,KAER,OAAO,yBAAKf,UAAU,OACpB,0BAAMA,UAAU,WAAhB,KACA,0BAAMA,UAAU,YAAae,Q,GAVFH,cCAlB,SAASK,IACtB,OACE,6BAASjB,UAAU,SACjB,sQACA,wFAA6D,kBAAC,EAAD,CAAKe,KAAK,UAAvE,KAAkF,kBAAC,EAAD,CAAKA,KAAK,UAA5F,SAA2G,kBAAC,EAAD,CAAKA,KAAK,cAArH,oM,UCHeG,E,uKAUT,IAAD,EACgCF,KAAKpB,MAApCmB,EADD,EACCA,KAAMI,EADP,EACOA,MAAOC,EADd,EACcA,KAAMC,EADpB,EACoBA,QAC3B,OACE,6BAASrB,UAAU,gBACjB,yBAAKA,UAAU,mBACb,yBAAKM,IAAMa,EAAQX,IAAI,KACvB,4BAAMO,GACN,yBAAKf,UAAU,QAEXoB,EAAKnB,KAAK,SAAAqB,GACR,OAAO,kBAAC,EAAD,CAAKP,KAAOO,QAIzB,2BAAKD,IAEP,yBAAKrB,UAAU,uB,GA1BkBY,a,MCsC1BW,MAvCf,WA6BE,OACE,6BAASvB,UAAU,YA5BD,CAClB,CACEe,KAAM,eACNI,MAAO,0CACPC,KAAM,CAAC,OAAQ,QAAS,SACxBC,QAAS,mVACTG,YAAa,qBACbC,aAAc,sBAEhB,CACEV,KAAM,iBACNI,MAAO,0CACPC,KAAM,CAAC,OAAQ,QAAS,SACxBC,QAAS,mVACTG,YAAa,qBACbC,aAAc,sBAEhB,CACEV,KAAM,iBACNI,MAAO,0CACPC,KAAM,CAAC,OAAQ,QAAS,SACxBC,QAAS,mVACTG,YAAa,qBACbC,aAAc,uBAMAxB,KAAK,SAAEyB,GACjB,OAAO,kBAAC,EAAD,iBAAmBA,EAAnB,CAA6BC,IAAMD,EAAQX,aC7BvCa,E,4MACnBC,MAAQ,CACN3B,MAAO,U,EAQTL,kBAAoB,SAAEK,GACpB,EAAK4B,SAAL,eACK,EAAKD,MADV,CAEE3B,Y,uDAIM,IAEF6B,EAAgB,WADJf,KAAKa,MAAf3B,MAGR,OACE,6BACE,kBAAC,EAAD,CAAQL,kBAAoBmB,KAAKnB,oBACjC,0BAAMG,UAAY+B,GAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GA3BuBnB,aCKboB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.392430d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.619231ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.8a890f7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume.537ef4c6.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\nimport GithubLogo from '../../images/github.svg';\nimport LinkedInLogo from '../../images/linkedin.svg';\nimport Email from '../../images/email.svg';\nimport Resume from '../../images/resume.svg';\nimport { Link } from 'react-router-dom';\n\nexport default class Header extends Component {\n  static propTypes = {\n    updateGlobalColor: PropTypes.func.isRequired\n  };\n\n  /**\n   * On color click, pass up the selected\n   * color.\n   */\n  colorClick = ( event ) => {\n    this.props.updateGlobalColor( event.target.id );\n  }\n\n  render() {\n    const colors = [\n      'blue',\n      'yellow',\n      'green',\n      'purple'\n    ];\n\n    return (\n      <header>\n        <div className='color-picker'>\n          { colors.map( color => {\n              return <div\n                id={ color }\n                className={ 'color ' + color}\n                onClick={ this.colorClick }\n              >\n              </div>;\n            }) }\n        </div>\n\n        <div className='title-wrap'>\n          <h1>Brandon Walsh | Full Stack Developer</h1>\n          <nav>\n            <Link to={{ pathname: 'https://github.com/walshyb' }} target='_blank'>\n              <img src={ GithubLogo } alt='Github' />\n            </Link>\n            <Link to={{ pathname: 'https://www.linkedin.com/in/bwalshy/' }} target='_blank'>\n              <img src={ LinkedInLogo } alt='LinkedIn' />\n            </Link>\n            <Link to={{ pathname: 'mailto:bmwalshy@gmail.com' }}>\n              <img src={ Email } alt='Email' />\n            </Link>\n            <Link to=\"/Brandon_Walsh_Resume.pdf\" target=\"_blank\">\n              <img src={ Resume } alt='Resume' />\n            </Link>\n          </nav>\n        </div>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Footer.scss';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer>\n      </footer>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Tag.scss';\n\nexport default class Tag extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { name } = this.props;\n\n    return <div className=\"tag\">\n      <span className=\"hashtag\">#</span>\n      <span className=\"tag-name\">{ name }</span>\n    </div>\n  }\n}\n","import React from 'react';\nimport './index.scss';\nimport Tag from '../../components/common/Tag';\n\nexport default function About() {\n  return (\n    <section className=\"about\">\n      <p>Hi, my name is Brandon. I'm a web developer currently based in the Hudson Valley, NY with plans to move back to my home in NYC. I have 5+ years of experience across the stack and I'm particularly interested in backend technologies.</p>\n      <p>The technologies I've used most in the last few years are <Tag name=\"rails\"/>, <Tag name=\"react\"/>, and <Tag name=\"wordpress\"/>. My experience includes: documenting &amp; creating APIs, building custom Content Management Systems, writing tests, building react components &amp; sites, and planning &amp; managing database systems. </p>\n    </section>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from './Tag';\nimport './ProjectItem.scss';\n\nexport default class ProjectItem extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    content: PropTypes.string.isRequired,\n    caseStudyUrl: PropTypes.string,\n    liveSiteUrl: PropTypes.string\n  };\n\n  render() {\n    const { name, image, tags, content } = this.props;\n    return (\n      <article className=\"project-item\">\n        <div className=\"project-details\">\n          <img src={ image } alt=\"\" />\n          <h2>{ name }</h2>\n          <div className=\"tags\">\n            {\n              tags.map( tag => {\n                return <Tag name={ tag }/>\n              })\n            }\n          </div>\n          <p>{ content }</p>\n        </div>\n        <div className=\"project-links\">\n        </div>\n      </article>\n    );\n  }\n}\n","import React from 'react';\nimport ProjectItem from '../../components/common/ProjectItem';\nimport './index.scss';\n\nfunction Projects() {\n  // TODO: move to .json file\n  const projectData = [\n    {\n      name: 'Project Name',\n      image: 'https://via.placeholder.com/400x150.png',\n      tags: ['ruby', 'rails', 'react'],\n      content: 'Apparently we had reached a great height in the atmosphere, for the sky was a dead black, and the stars had ceased to twinkle. By the same illusion which lifts the horizon of the sea to the level of the spectator on a hillside, the sable cloud beneath was dished out, and the car seemed to float in the middle of an immense dark sphere.',\n      liveSiteUrl: 'https://google.com',\n      caseStudyUrl: 'https://google.com'\n    },\n    {\n      name: 'Project Name 1',\n      image: 'https://via.placeholder.com/400x150.png',\n      tags: ['ruby', 'rails', 'react'],\n      content: 'Apparently we had reached a great height in the atmosphere, for the sky was a dead black, and the stars had ceased to twinkle. By the same illusion which lifts the horizon of the sea to the level of the spectator on a hillside, the sable cloud beneath was dished out, and the car seemed to float in the middle of an immense dark sphere.',\n      liveSiteUrl: 'https://google.com',\n      caseStudyUrl: 'https://google.com'\n    },\n    {\n      name: 'Project Name 2',\n      image: 'https://via.placeholder.com/400x150.png',\n      tags: ['ruby', 'rails', 'react'],\n      content: 'Apparently we had reached a great height in the atmosphere, for the sky was a dead black, and the stars had ceased to twinkle. By the same illusion which lifts the horizon of the sea to the level of the spectator on a hillside, the sable cloud beneath was dished out, and the car seemed to float in the middle of an immense dark sphere.',\n      liveSiteUrl: 'https://google.com',\n      caseStudyUrl: 'https://google.com'\n    },\n  ];\n\n  return (\n    <section className=\"projects\">\n      { projectData.map( ( project ) => {\n          return <ProjectItem  { ...project } key={ project.name } />\n        })\n      }\n    </section>\n  );\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport './styles/main.scss';\nimport Header from './components/shell/Header';\nimport Footer from './components/shell/Footer';\nimport About from './page-components/About';\nimport Projects from './page-components/Projects';\n\nexport default class App extends Component {\n  state = {\n    color: 'orange'\n  };\n\n  /**\n   * Update global color\n   *\n   * @param String color \n   */\n  updateGlobalColor = ( color ) => {\n    this.setState({\n      ...this.state,\n      color\n    });\n  }\n  \n  render() {\n    const { color } = this.state;\n    const mainClassName = 'content ' + color;\n\n    return (\n      <div>\n        <Header updateGlobalColor={ this.updateGlobalColor } />\n        <main className={ mainClassName }>\n          <About />\n          <Projects />\n          <Footer />\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}